{"config":{"indexing":"full","jieba_dict":null,"jieba_dict_user":null,"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"<p>Welcome to Demystifying dbt online book! \ud83e\udd19</p> <p>I'm Jacek Laskowski, an IT freelancer specializing in Apache Spark, Delta Lake and Apache Kafka (with brief forays into a wider data engineering space, e.g. Trino, ksqlDB and recently dbt, mostly during Warsaw Data Engineering meetups).</p> <p>I'm very excited to have you here and hope you will enjoy exploring dbt as much as I have.</p>  <p>Flannery O'Connor</p> <p>I write to discover what I know.</p>   \"The Internals Of\" series <p>I'm also writing other online books in the \"The Internals Of\" series. Please visit \"The Internals Of\" Online Books home page.</p>  <p>Expect text and code snippets from a variety of public sources. Attribution follows.</p> <p>Now, let's take a closer look at dbt \ud83d\udd25</p>  <p>Last update: 2022-07-03</p>","title":"Demystifying dbt"},{"location":"001/","text":"","title":"Day 1: Installing dbt"},{"location":"001/#pyenv","text":"<ul> <li>pyenv for Simple Python Version Management</li> <li>Command Reference</li> </ul> <pre><code>$ pyenv --version\npyenv 2.3.2\n\n$ pyenv install 3.10:latest\nDownloading Python-3.10.5.tar.xz...\n-&gt; https://www.python.org/ftp/python/3.10.5/Python-3.10.5.tar.xz\nInstalling Python-3.10.5...\nInstalled Python-3.10.5 to /Users/jacek/.pyenv/versions/3.10.5\n\n$ pyenv rehash\n\n$ pyenv local 3.10.5\n\n$ python --version\nPython 3.10.5\n\n$ python3.10 --version\nPython 3.10.5\n\n$ pyenv version\n3.10.5 (set by /Users/jacek/dev/sandbox/dbt-sandbox/.python-version)\n</code></pre>","title":"pyenv"},{"location":"001/#pyenv-virtualenv","text":"<p>pyenv-virtualenv is a <code>pyenv</code> plugin for managing virtualenvs and conda environments for Python on UNIX-like systems.</p> <pre><code>$ pyenv virtualenv dbt\n\n$ pyenv virtualenvs --skip-aliases\ndbt (created from /usr/local/opt/python@3.9)\n\n$ pyenv local dbt\n\n$ cat .python-version\ndbt\n</code></pre>","title":"pyenv-virtualenv"},{"location":"001/#install-dbt-incl-databricks-adapter-plugin","text":"<p>This is a modified version of the official Install dbt from source to avoid polluting system-wide configuration.</p> <pre><code>$ pip install --upgrade pip wheel setuptools\nSuccessfully installed pip-22.1.2 setuptools-62.6.0 wheel-0.37.1\n\n$ cat requirements.txt\ndbt-core\ndbt-postgres\ndbt-databricks\n\n$ pip install -r requirements.txt\n...\nSuccessfully installed Babel-2.10.3 Jinja2-2.11.3 MarkupSafe-2.0.1 agate-1.6.3 attrs-21.4.0 certifi-2022.6.15 cffi-1.15.1 charset-normalizer-2.1.0 click-8.1.3 colorama-0.4.4 databricks-sql-connector-2.0.2 dbt-core-1.1.1 dbt-databricks-1.1.0 dbt-extractor-0.4.1 dbt-postgres-1.1.1 dbt-spark-1.1.0 future-0.18.2 hologram-0.0.15 idna-3.3 isodate-0.6.1 jsonschema-3.2.0 leather-0.3.4 logbook-1.5.3 mashumaro-2.9 minimal-snowplow-tracker-0.0.2 msgpack-1.0.4 networkx-2.8.3 numpy-1.23.0 packaging-21.3 pandas-1.4.3 parsedatetime-2.4 psycopg2-binary-2.9.3 pyarrow-8.0.0 pycparser-2.21 pyparsing-3.0.9 pyrsistent-0.18.1 python-dateutil-2.8.2 python-slugify-6.1.2 pytimeparse-1.1.8 pytz-2022.1 pyyaml-6.0 requests-2.28.1 six-1.16.0 sqlparams-4.0.0 sqlparse-0.4.2 text-unidecode-1.3 thrift-0.16.0 typing-extensions-4.3.0 urllib3-1.26.9 werkzeug-2.1.2\n\n$ pip list dbt | egrep \"^dbt-\" | sort\ndbt-core                 1.1.1\ndbt-databricks           1.1.0\ndbt-extractor            0.4.1\ndbt-postgres             1.1.1\ndbt-spark                1.1.0\n</code></pre>","title":"Install dbt (incl. Databricks adapter plugin)"},{"location":"001/#install-from-sources","text":"<p>Clone the <code>dbt-databricks</code> adapter from https://github.com/databricks/dbt-databricks and install from the directory.</p> <pre><code>git clone https://github.com/databricks/dbt-databricks\ncd dbt-databricks\ngco v1.1.0\ngswc v1.1.0\npip install .\n</code></pre> <pre><code>Successfully installed dbt-databricks-1.1.0\n</code></pre>","title":"Install from Sources"},{"location":"002/","text":"","title":"Day 2: Configuring dbt Profile"},{"location":"002/#postgres-profile","text":"<ol> <li>Configuring your profile</li> <li>Postgres Profile</li> </ol>","title":"Postgres Profile"},{"location":"002/#profilesyml","text":"<p>profiles.yml Reference</p> ~/.dbt/profiles.yml<pre><code>postgres_at_my_company:\n  target: dev\n  outputs:\n    dev:\n      type: postgres\n      user: postgres\n      password: xxx\n      database: postgres\n      schema: postgres\n      host: localhost\n      port: 5432\n</code></pre>","title":"profiles.yml"},{"location":"002/#dbt_projectyml","text":"<p>dbt_project.yml Reference</p> dbt_project.yml<pre><code>name: 'dbt_postgres_demo'\n\nconfig-version: 2\nversion: 1.0.0\n\nprofile: 'postgres_at_my_company'\n\nrequire-dbt-version: \"&gt;=1.1.1\"\n</code></pre>","title":"dbt_project.yml"},{"location":"002/#start-postgres","text":"<p>Docker official image of PostgreSQL</p> <pre><code>docker run \\\n  -d \\\n  --rm \\\n  --name postgres \\\n  -e POSTGRES_PASSWORD=xxx \\\n  -p \"5432:5432\" \\\n  postgres\n</code></pre> <pre><code>$ docker exec -it postgres psql -U postgres\npsql (14.4 (Debian 14.4-1.pgdg110+1))\nType \"help\" for help.\n\npostgres=# \\conninfo\nYou are connected to database \"postgres\" as user \"postgres\" via socket in \"/var/run/postgresql\" at port \"5432\".\n\npostgres=# \\l\n                                 List of databases\n   Name    |  Owner   | Encoding |  Collate   |   Ctype    |   Access privileges\n-----------+----------+----------+------------+------------+-----------------------\n postgres  | postgres | UTF8     | en_US.utf8 | en_US.utf8 |\n template0 | postgres | UTF8     | en_US.utf8 | en_US.utf8 | =c/postgres          +\n           |          |          |            |            | postgres=CTc/postgres\n template1 | postgres | UTF8     | en_US.utf8 | en_US.utf8 | =c/postgres          +\n           |          |          |            |            | postgres=CTc/postgres\n(3 rows)\n\npostgres=# \\dn+\n                          List of schemas\n  Name  |  Owner   |  Access privileges   |      Description\n--------+----------+----------------------+------------------------\n public | postgres | postgres=UC/postgres+| standard public schema\n        |          | =UC/postgres         |\n(1 row)\n</code></pre>","title":"Start Postgres"},{"location":"002/#dbt-debug","text":"<p>Use dbt debug to validate warehouse credentials</p> <pre><code>$ dbt debug --config-dir\nTo view your profiles.yml file, run:\n\nopen /Users/jacek/.dbt\n\n$ dbt debug\ndbt version: 1.1.1\npython version: 3.9.13\npython path: /Users/jacek/.pyenv/versions/dbt/bin/python3.9\nos info: macOS-11.6.6-x86_64-i386-64bit\nUsing profiles.yml file at /Users/jacek/.dbt/profiles.yml\nUsing dbt_project.yml file at /Users/jacek/dev/sandbox/dbt-sandbox/dbt_project.yml\n\nConfiguration:\n  profiles.yml file [OK found and valid]\n  dbt_project.yml file [OK found and valid]\n\nRequired dependencies:\n - git [OK found]\n\nConnection:\n  host: localhost\n  port: 5432\n  user: postgres\n  database: postgres\n  schema: postgres\n  search_path: None\n  keepalives_idle: 0\n  sslmode: None\n  Connection test: [OK connection ok]\n\nAll checks passed!\n</code></pre>","title":"dbt debug"},{"location":"002/#dbt-run","text":"<ul> <li>dbt run</li> <li>7.7. VALUES Lists</li> </ul> models/nums.sql<pre><code>SELECT *\nFROM (VALUES (1, 'one'), (2, 'two'), (3, 'three')) AS t (num,letter)\n</code></pre> <pre><code>$ dbt run\nFound 1 model, 0 tests, 0 snapshots, 0 analyses, 167 macros, 0 operations, 0 seed files, 0 sources, 0 exposures, 0 metrics\nConcurrency: 1 threads (target='dev')\n1 of 1 START view model postgres.nums .......................................... [RUN]\n1 of 1 OK created view model postgres.nums ..................................... [CREATE VIEW in 0.06s]\nFinished running 1 view model in 0.16s.\nCompleted successfully\nDone. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1\n</code></pre>","title":"dbt run"},{"location":"003/","text":"","title":"Day 3: Configuring sbt-databricks plugin"},{"location":"003/#readme","text":"<ol> <li>dbt init</li> <li>dbt Models</li> <li>Profile Setup for the dbt-databricks plugin</li> </ol>","title":"Readme"},{"location":"learning-resources/","text":"","title":"Learning Resources"},{"location":"learning-resources/#videos","text":"<ol> <li>How to build a mature dbt project from scratch</li> </ol>","title":"Videos"},{"location":"overview/","text":"","title":"About dbt"},{"location":"overview/#introduction","text":"<p>We built dbt to help advance the practice of analytics engineering: a workflow that allows anyone who knows SQL to bring engineering practices to analytics, and to build datasets that are accurate, tested, and documented.</p>","title":"Introduction"},{"location":"overview/#courses","text":"<p>Courses</p> <ul> <li>dbt Fundamentals</li> </ul>","title":"Courses"},{"location":"overview/#review","text":"<ol> <li>https://github.com/dbt-labs/dbt-core</li> <li>https://github.com/dbt-labs/dbt-spark</li> <li>https://github.com/databricks/dbt-databricks</li> </ol>","title":"Review"}]}